<?php
/**
 * Zikula Application Framework
 *
 * @copyright (c) 2001, Zikula Development Team
 * @link http://www.zikula.org
 * @version $Id: pnadmin.php 196 2006-05-14 23:01:22Z chestnut $
 * @license GNU/GPL - http://www.gnu.org/copyleft/gpl.html
 */

/**
 * main function
 *
 */
function gmap_admin_main()
{
    if (!SecurityUtil::checkPermission('gmap::', '::', ACCESS_ADMIN)) {
        return LogUtil::registerPermissionError(pnConfigGetVar('entrypoint', 'index.php'));
    }

    $pnRender = pnRender::getInstance('gmap', false);

    $pnRender->assign('items',    pnModAPIFunc('gmap', 'user', 'getall', array()));
    $pnRender->assign('specials', pnModAPIFunc('gmap', 'user', 'getall', array('special' => true)));

    return $pnRender->fetch('gmap_admin_main.html');
}

/**
 * configuration
 *
 */
function gmap_admin_config()
{
    if (!SecurityUtil::checkPermission('gmap::', '::', ACCESS_ADMIN)) {
        return LogUtil::registerPermissionError(pnConfigGetVar('entrypoint', 'index.php'));
    }

    Loader::requireOnce('modules/gmap/pnincludes/gm_admin_modifyconfighandler.class.php');

    // Create output object
    $pnf = FormUtil::newpnForm('gmap');

    // Return the output that has been generated by this function
    return $pnf->pnFormExecute('gmap_admin_config.html', new gmap_admin_modifyconfighandler());
}

/**
 * modify an existing special marker
 *
 */
function gmap_admin_modify()
{
    if (!SecurityUtil::checkPermission('gmap::', '::', ACCESS_ADMIN)) {
        return LogUtil::registerPermissionError(pnConfigGetVar('entrypoint', 'index.php'));
    }

    $mid      = (int)FormUtil::getPassedValue('mid', -1, 'GETPOST');
    if ($mid == -1) {
        return LogUtil::registerError(_GM_ILLEGALMARKERID, null, pnModURL('gmap', 'admin', 'main'));
    }

    $item = pnModAPIFunc('gmap', 'user', 'get', array('objectid' => $mid));
    if (!$item) {
        return LogUtil::registerError(_GM_NOSUCHMARKER, null, pnModURL('gmap', 'admin', 'main'));
    }

    // base folder for images
    $ifolder = 'modules/gmap/pnimages';
    if ($item['uid'] > 1) {
        // user marker
        $item['title'] = pnUserGetVar('uname', $item['uid']);
    } else {
        // poi, append subfolder
        $ifolder .= '/specials';
    }

    Loader::loadClass('FileUtil');
    $files = FileUtil::getFiles($ifolder, false, true, 'png', false);
    foreach($files as $file) {
        if (ereg('mm_20_', $file) || ereg('marker_', $file)) {
            $specialfiles[$file] = $file;
        }
    
    }

    PageUtil::addVar('javascript', 'javascript/ajax/prototype.js');
    PageUtil::addVar('javascript', 'modules/gmap/pnjavascript/googlemap.js');

    $pnRender = pnRender::getInstance('gmap', false);
    $pnRender->assign('icons',  $specialfiles);
    $pnRender->assign('ifolder', $ifolder);
    $pnRender->assign($item);

    return $pnRender->fetch('gmap_admin_modify.html');
}

/**
 * updated a marker
 *
 */
function gmap_admin_update()
{
    if (!SecurityUtil::checkPermission('gmap::', '::', ACCESS_ADMIN)) {
        return LogUtil::registerPermissionError(pnConfigGetVar('entrypoint', 'index.php'));
    }

    $args['uid']   = FormUtil::getPassedValue('uid');
    $args['mid']   = FormUtil::getPassedValue('mid', -1, 'POST');
    $args['title'] = FormUtil::getPassedValue('title');
    $args['long']  = FormUtil::getPassedValue('longitude');
    $args['lat']   = FormUtil::getPassedValue('latitude');
    $args['msg']   = FormUtil::getPassedValue('msg');
    $args['icon']  = FormUtil::getPassedValue('icon');

    $action = FormUtil::getPassedValue('action');

    if (empty($args['long']) || empty($args['lat'])) {
        return LogUtil::registerError(_GM_WRONGCOORDINATES, null, pnModURL('gmap', 'admin', 'main'));
    }

    // we supply no action parameter for updating as this is the default in the update function
    $result = pnModAPIFunc('gmap', 'user', 'update', $args);

    if ($result == false) {
        LogUtil::registerError(_GM_UPDATEERROR);
    } else {
        LogUtil::registerStatus(_GM_COORDSUPDATED);
    }
    return pnRedirect(pnModURL('gmap', 'admin', 'main'));
}

/**
 * delete a marker
 *
 */
function gmap_admin_delete()
{
   if (!SecurityUtil::checkPermission('gmap::', '::', ACCESS_ADMIN)) {
        return LogUtil::registerPermissionError(pnConfigGetVar('entrypoint', 'index.php'));
    }

    $mid     = (int)FormUtil::getPassedValue('mid', -1, 'GETPOST');
    $confirm = FormUtil::getPassedValue('confirm', 0, 'GETPOST');
    $submit  = FormUtil::getPassedValue('submit', '', 'GETPOST');

    if ($mid == -1) {
        return LogUtil::registerError(_GM_ILLEGALMARKERID, null, pnModURL('gmap', 'admin', 'main'));
    }

    if (!empty($submit)) {
        if ($confirm==1) {
            if (pnModAPIFunc('gmap', 'admin', 'delete', array('mid' => $mid))) {
                LogUtil::registerStatus(_GM_MARKERDELETED);
                return pnRedirect(pnModURL('gmap', 'admin', 'main'));
            } else {
                return LogUtil::registerError(_GM_ERRORDELETINGMARKER, null, pnModURL('gmap', 'admin', 'main'));
            }
        } else {
            return LogUtil::registerError(_GM_MUSTCONFIRM, null, pnModURL('gmap', 'admin', 'deletemarker', array('mid' => $mid)));
        }
    }

    $item = pnModAPIFunc('gmap', 'user', 'get', array('objectid' => $mid));
    if (!$item) {
        return LogUtil::registerError(_GM_NOSUCHMARKER, null, pnModURL('gmap', 'admin', 'main'));
    }
    if ($item['uid'] == -1) {
        $item['icon'] = 'specials/'. DataUtil::formatforOS($item['icon']);
    }

    $pnRender = pnRender::getInstance('gmap', false);
    $pnRender->assign($item);
    return $pnRender->fetch('gmap_admin_delete.html');
}
